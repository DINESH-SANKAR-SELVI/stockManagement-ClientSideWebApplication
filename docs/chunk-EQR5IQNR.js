import{P as c,T as a,Tb as d}from"./chunk-GXLUKKXH.js";var s=class extends Error{};s.prototype.name="InvalidTokenError";function f(t){return decodeURIComponent(atob(t).replace(/(.)/g,(e,n)=>{let r=n.charCodeAt(0).toString(16).toUpperCase();return r.length<2&&(r="0"+r),"%"+r}))}function h(t){let e=t.replace(/-/g,"+").replace(/_/g,"/");switch(e.length%4){case 0:break;case 2:e+="==";break;case 3:e+="=";break;default:throw new Error("base64 string is not of the correct length")}try{return f(e)}catch{return atob(e)}}function l(t,e){if(typeof t!="string")throw new s("Invalid token specified: must be a string");e||(e={});let n=e.header===!0?0:1,r=t.split(".")[n];if(typeof r!="string")throw new s(`Invalid token specified: missing part #${n+1}`);let o;try{o=h(r)}catch(i){throw new s(`Invalid token specified: invalid base64 for part #${n+1} (${i.message})`)}try{return JSON.parse(o)}catch(i){throw new s(`Invalid token specified: invalid json for part #${n+1} (${i.message})`)}}var u=(()=>{let e=class e{get value(){return localStorage.getItem("userContext")}constructor(){}isLoggedIn(){return this.value!=null&&(this.decodedValue=atob(this.value),this.decodedValue&&(this.userContext=JSON.parse(this.decodedValue),(this.userContext!=null||this.userContext!=null)&&this.userContext.isAuthendicated))?(console.log("isauth",this.userContext.isAuthendicated),!0):!1}hasRole(r){if(this.isLoggedIn())try{let o=l(this.userContext.token);if(o.roles)return o.roles.split(",").includes(r)}catch(o){console.error("Error decoding token:",o)}return!1}};e.\u0275fac=function(o){return new(o||e)},e.\u0275prov=c({token:e,factory:e.\u0275fac,providedIn:"root"});let t=e;return t})();var y=(t,e)=>{let n=t.data.expectedRole,r=a(u),o=a(d);return r.hasRole(n)?!0:(o.navigate(["/login"]),!1)};export{u as a,y as b};
